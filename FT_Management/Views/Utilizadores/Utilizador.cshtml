@model FT_Management.Models.Utilizador

@{
    ViewData["Title"] = "Perfil";
}


<div class="container">
    <div class="columns">
        <div class="column">
            <div class="tile">
                <div class="tile is-parent is-vertical">
                    <article class="tile is-child notification is-info">
                        <p class="title">
                            <span class="icon mr-3">
                                <i class="fas fa-user"></i>
                            </span>
                            <span>Perfil de Utilizador</span>
                        </p>
                    </article>
                </div>
            </div>
        </div>
    </div>
</div>

<section class="section is-main-section">
    <div class="tile is-ancestor">
        <div class="tile is-parent">
            <div class="card tile is-child">
                <header class="card-header">
                    <p class="card-header-title">
                        <span class="icon">
                            <i class="fa-solid @(Model.Admin ? "fa-user-graduate" : "fa-user")"></i>
                        </span>
                        - Perfil
                    </p>
                </header>
                <div class="card-content">
                    <input type="hidden" asp-for="Id" id="txtHiddenIdUtilizador" />
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.NomeUtilizador)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly asp-for="NomeUtilizador">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.NomeCompleto)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly asp-for="NomeCompleto">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.EmailUtilizador)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly
                                        asp-for="EmailUtilizador"></div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.IdPHC)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly asp-for="IdPHC"></div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.IdArmazem)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly asp-for="IdArmazem">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.Viatura)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control"><input type="text" class="input" readonly
                                        asp-for="Viatura.Matricula"></div>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.TipoUtilizador)</label></div>
                        <div class="field-body">
                            <div class="field">
                                <span class="select" style="width:100%">
                                    <select style="width:100%" asp-for="TipoUtilizador" id="LstTipoUtilizador" disabled>
                                        <option id="1">Técnico</option>
                                        <option id="2">Comercial</option>
                                        <option id="3">Escritório</option>
                                    </select>
                                </span>
                                <script>
                                    document.getElementById("LstTipoUtilizador").selectedIndex = @Model.TipoUtilizador - 1;
                                </script>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.ApiKey.Key)</label></div>
                        <div class="field-body">
                            <div class="field has-addons">
                                <div class="control" style="width:100%">
                                    <input class="input" type="text" readonly id="txtApiKey" asp-for="ApiKey.Key">
                                </div>
                                <div class="field has-addons">
                                    <p class="control">
                                        <button class="button is-info" @(Model.ApiKey.Key == "" ? "disabled" : "")
                                            onclick="copiarTexto('txtApiKey');">
                                            Copiar
                                        </button>
                                    </p>
                                    <p class="control">
                                        <button class="button is-primary" onclick="GerarApiKey();">
                                            Gerar
                                        </button>
                                    </p>
                                    <p class="control">
                                        <button class="button is-link" @(Model.ApiKey.Key == "" ? "disabled" : "")
                                            onclick="Bulma('#modalLinks').modal().open();">
                                            <i class="fa-solid fa-info"></i>
                                        </button>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="button is-info @(Model.FaceRec.Length == 0 ? "is-success" : "is-warning") is-large is-fullwidth" onclick="startFaceID();Bulma('#modalFaceId').modal().open();isFaceDetectionEnabled=true;">
                        <span class="icon mr-3"> <i class="fa-regular fa-face-grin"></i></span>
                        <span>@(Model.FaceRec.Length == 0 ? "Inicializar Face ID" : "Repor Face ID")</span>
                    </button>
                    <hr>
                    <p>Autenticação de 2 Fatores</p>
                    @if (string.IsNullOrEmpty(Model.SecondFactorAuthStamp))
                    {
                        <form method="post" style="width:100%" asp-controller="Utilizadores" asp-action="SecondFA"
                        asp-route-id="@Model.Id">
                            <div asp-validation-summary="ModelOnly" class="has-text-danger"></div>
                            <input hidden value=@ViewData["2FASTAMP"] name="stamp">

                            <div class="field is-horizontal">
                                <div class="field-label is-normal">
                                    <figure class="image is-256x256">
                                        <img src="@Model.SecondFactorImgUrl">
                                    </figure>
                                </div>
                                <div class="field-body">
                                    <div class="field">
                                        <div class="control"><input class="input" readonly
                                            value="@Model.SecondFactorAuthCode">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="field is-horizontal">
                                <div class="field-label is-normal"><label class="label">Código</label></div>
                                <div class="field-body">
                                    <div class="field">
                                        <div class="control"><input class="input" placeholder="Código" type="tel"
                                            name="code">
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="button is-info is-fullwidth is-large">
                                <span> Ativar </span>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form method="DELETE" style="width:100%" asp-controller="Utilizadores" asp-action="SecondFA"
                        asp-route-id="@Model.Id">
                            <button type="submit" class="button is-danger is-large is-fullwidth">
                                <span> Remover </span>
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>

        <div class="modal" id="modalLinks">
            <div class="modal-background"></div>
            <div class="modal-card">
                <header class="modal-card-head">
                    <p class="modal-card-title">Calendários</p>
                    <button class="delete" aria-label="close"></button>
                </header>
                <section class="modal-card-body">
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">Calendário de Serviços</label></div>
                        <div class="field-body">
                            <div class="field" style="width:100%">
                                <div class="control"><input type="text" class="input" id="txtPedidos" disabled
                                        value="@(new Uri("http://"+@Context.Request.Host+"/Pedidos/Calendario?ApiKey=" + @Model.ApiKey.Key))">
                                </div>
                            </div>
                            <div class="field has-addons">
                                <p class="control">
                                    <button class="button is-info" onclick="copiarTexto('txtPedidos');">
                                        Copiar
                                    </button>
                                </p>
                                <p class="control">
                                    <a class="button is-primary"
                                        href="@(new Uri("http://"+@Context.Request.Host+"/Pedidos/Calendario?ApiKey=" + @Model.ApiKey.Key))">
                                        <i class="fa-solid fa-plus"></i>
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">Calendário de Férias</label></div>
                        <div class="field-body">
                            <div class="field" style="width:100%">
                                <div class="control"><input type="text" class="input" id="txtFerias" disabled
                                        value="@(new Uri("http://"+@Context.Request.Host+"/Ferias/Calendario?ApiKey=" + @Model.ApiKey.Key))">
                                </div>
                            </div>
                            <div class="field has-addons">
                                <p class="control">
                                    <button class="button is-info" onclick="copiarTexto('txtFerias');">
                                        Copiar
                                    </button>
                                </p>
                                <p class="control">
                                    <a class="button is-primary"
                                        href="@(new Uri("http://"+@Context.Request.Host+"/Ferias/Calendario?ApiKey=" + @Model.ApiKey.Key))">
                                        <i class="fa-solid fa-plus"></i>
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>

        <div class="tile is-parent">
            <div class="card tile is-child">
                <header class="card-header">
                    <p class="card-header-title">
                        <span class="icon">
                            <i class="fa-solid fa-user-pen"></i>
                        </span>
                        - Editar Perfil
                    </p>
                </header>

                <div class="card-content">
                    <div class="field is-horizontal">
                        <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                model.ImgUtilizador)</label></div>
                        <div class="field-body">
                            <div class="field has-addons">
                                <figure class="mr-3 image is-inline-block is-128x128">
                                    <img class="is-rounded" src="@Model.ImgUtilizador" alt="user_image">
                                </figure>
                                <div class="form-group">
                                    <form action="/Utilizadores/Imagem/@Model.Id" method="POST" class="dropzone"
                                        id="dropImage">
                                        <div class="dz-message needsclick">
                                            Largue uma imagem aqui para fazer o upload
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <form method="put" style="width:100%" id="frmUtilizador" asp-controller="Utilizadores"
                        asp-action="Utilizador">
                        <input type="hidden" class="input" asp-for="Id" name="id">
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.Pin)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="control"><input type="text" maxlength=4 class="input" asp-for="Pin">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.Iniciais)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="control"><input type="text" maxlength=2 class="input"
                                            asp-for="Iniciais"></div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.DataNascimento)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="control"><input type="date" class="input" asp-for="DataNascimento"
                                            id="txtDataNascimento"></div>
                                    <script>
                                        bulmaCalendar.attach('#txtDataNascimento', {
                                            color: 'info',
                                            lang: 'pt',
                                            dateFormat: 'dd/MM/yyyy',
                                            todayLabel: 'Hoje',
                                            showClearButton: false,
                                            cancelLabel: 'Cancelar'
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.Telemovel)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="control"><input type="tel" class="input" asp-for="Telemovel"></div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.TipoMapa)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="select" style="width:100%">
                                        <select class="select" style="width:100%" asp-for="TipoMapa">
                                            <option value="1">Google Maps</option>
                                            <option value="2">Waze</option>
                                            <option value="3">Apple Maps</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">@Html.DisplayNameFor(model =>
                                    model.CorCalendario)</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="control"><input type="color" class="input" asp-for="CorCalendario">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">Zona</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="select mb-1" style="width:100%">
                                        <select asp-for="Zona" asp-items="ViewBag.Zonas" class="form-control"
                                            style="width:100%">
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">Tipo</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="select mb-1" style="width:100%">
                                        <select asp-for="TipoTecnico" asp-items="ViewBag.TipoTecnico"
                                            class="form-control" style="width:100%">
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">Utilizador NextCloud</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="select mb-1" style="width:100%">
                                        <select asp-for="ChatToken" asp-items="ViewBag.Chats" class="form-control"
                                            style="width:100%">
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field is-horizontal">
                            <div class="field-label is-normal"><label class="label">Notificação Automática</label></div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="select mb-1" style="width:100%">
                                        <select asp-for="NotificacaoAutomatica" asp-items="ViewBag.Notificacoes"
                                            class="form-control" style="width:100%">
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="field is-horizontal">
                            <div class="field-body">
                                <div class="field">
                                    <div class="field">
                                        <div class="field-body">
                                            <div class="field is-grouped">
                                                <div class="control" style="width:50%">
                                                    <a class="button is-black is-large is-fullwidth"
                                                        href="https://apps.apple.com/us/app/nextcloud-talk/id1296825574">
                                                        <span class="mr-2"><i class="fa-brands fa-apple"></i></span>
                                                        <p class="is-size-6">Disponivel na <br> <span
                                                                class="has-text-weight-bold is-size-5">App Store</span>
                                                        </p>
                                                    </a>
                                                </div>
                                                <div class="control" style="width:50%">
                                                    <a class="button is-black is-large is-fullwidth"
                                                        href="https://play.google.com/store/apps/details?id=com.nextcloud.talk2&hl=en&gl=US">
                                                        <span class="mr-2"><i
                                                                class="fa-brands fa-google-play"></i></span>
                                                        <p class="is-size-6">Obter na <br> <span
                                                                class="has-text-weight-bold is-size-5">Play Store</span>
                                                        </p>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="field">
                            <div class="field-label is-normal">
                            </div>
                            <div class="field-body">
                                <div class="field">
                                    <div class="field">
                                        <div class="field-body">
                                            <div class="field is-grouped">
                                                <div class="control" style="width:100%">
                                                    <button type="button" onclick="AtualizarUtilizador()"
                                                        class="button is-info is-fullwidth is-large"
                                                        control-id="ControlID-17">
                                                        <span> Atualizar </span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <header class="card-header">
            <p class="card-header-title"><span class="icon"><i class="fa-solid fa-user-lock"></i></span> - Alterar Senha
            </p>
        </header>
        <div class="card-content">
            <form method="put" style="width:100%" asp-controller="Utilizadores" asp-action="Senha" id="frmSenha">
                <input type="hidden" class="input" asp-for="Id" name="id">
                <div class="field is-horizontal">
                    <div class="field-label is-normal"><label class="label">Senha Atual</label></div>
                    <div class="field-body">
                        <div class="field">
                            <div class="control">
                                <input type="password" autocomplete="on" name="password_current" required="required"
                                    autcomplete="current-password" class="input" control-id="ControlID-19">
                            </div>
                            <p class="help">
                                Required. Your current password
                            </p>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="field is-horizontal">
                    <div class="field-label is-normal"><label class="label">Nova Senha</label></div>
                    <div class="field-body">
                        <div class="field">
                            <div class="control">
                                <input type="password" autocomplete="new-password" name="password" required="required"
                                    class="input" control-id="ControlID-20">


                            </div>
                            <p class="help">
                                Required. New password
                            </p>
                        </div>
                    </div>
                </div>
                <div class="field is-horizontal">
                    <div class="field-label is-normal"><label class="label">Confirmar Nova Senha</label></div>
                    <div class="field-body">
                        <div class="field">
                            <div class="control">
                                <input type="password" autocomplete="new-password" name="password_confirmation"
                                    required="required" class="input" control-id="ControlID-21">


                            </div>
                            <p class="help">
                                Required. New password one more time
                            </p>
                        </div>
                    </div>
                </div>
                <div asp-validation-summary="ModelOnly" class="has-text-danger"></div>
                <hr>
                <div class="field is-horizontal">
                    <div class="field-label is-normal">
                    </div>
                    <div class="field-body">
                        <div class="field">
                            <div class="control">
                                <button type="button" onclick="ResetSenha();" class="button is-info"
                                    control-id="ControlID-22">
                                    <span> Atualizar </span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

<div class="modal" id="modalFaceId">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head" id="divHeaderModal">
            <p class="modal-card-title" id="txtHeaderModal">Registar Face ID - @Model.NomeCompleto</p>
            <button class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div style="position: relative;">
                <video id="video" playsinline class="video" width="600" height="337" style="width: 100%; border-radius: 20px;"></video>
                <canvas id="canvas" class="canvas" style="position: absolute; top: 0; left: 0; z-index: 10"></canvas>
            </div>
        </section>
    </div>
</div>

<script>
    let isFaceDetectionEnabled = false; // Variável de controle
    let detected = 0;
    let nDetected = 0;
    let averageDescriptor = new Float32Array(128);

    async function startFaceID() {

        const webcam = document.getElementById("video");
        const canvas = document.getElementById("canvas");

        try {
            const stream = await navigator.mediaDevices.getUserMedia({ video });
            webcam.srcObject = stream;
            webcam.play();
        } catch (err) {
            console.error("Erro ao acessar a webcam:", err);
        }

        const startFaceDetection = async () => {
            const videoElement = webcam;
            const canvasElement = canvas;
            canvasElement.width = videoElement.width;
            canvasElement.height = videoElement.height;
            const displaySize = { width: videoElement.width, height: videoElement.height };
            faceapi.matchDimensions(canvasElement, displaySize);

            // Carregue o modelo de detecção facial
            await faceapi.nets.tinyFaceDetector.loadFromUri("/lib/vladmandic/face-api/model");
            await faceapi.loadFaceLandmarkModel("/lib/vladmandic/face-api/model");
            await faceapi.loadFaceRecognitionModel("/lib/vladmandic/face-api/model");

            const detectionInterval = setInterval(async () => {
                if (isFaceDetectionEnabled) {

                    if (detected == 1) {
                        notify("Detetado utilizador com sucesso!");
                        averageDescriptor = averageDescriptor.map(value => value / detected);
                        Bulma('#modalFaceId').modal().close();
                        isFaceDetectionEnabled = false;
                        console.log(averageDescriptor);
                        $.ajax({
                            type: "PUT",
                            url: "/Utilizadores/Utilizador/@Model.Id",
                            data: {"faceid": averageDescriptor.join(' ') },
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                            success: function (result) {
                                $(function () {
                                    if (result == "1") {
                                        notify("Utilizador atualizado com sucesso!");
                                        window.location.reload();
                                    } else {
                                        notifyError("Erro ao atualizar o utilizador");
                                    }
                                });
                            }
                        });
                    }

                    if (nDetected > 40) {
                        notifyError("Nao foi detetado um utilziador com confiança!");
                        Bulma('#modalFaceId').modal().close();
                        isFaceDetectionEnabled = false;
                    }

                    const detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();
                    const resizedDetections = faceapi.resizeResults(detections, displaySize);

                    // Aqui, você pode verificar as detecções faciais e tomar medidas apropriadas
                    if (resizedDetections.length > 0) {
                        for (const detection of detections) {
                            const confidenceScore = detection.detection.score;
                            console.log(detection);
                            if (confidenceScore > 0.98) {
                                averageDescriptor = detection.descriptor;
                                detected = 1;
                            }
                        }

                    } else {
                        nDetected++;
                    }

                    canvasElement
                        .getContext("2d")
                        .clearRect(0, 0, canvasElement.width, canvasElement.height);
                    faceapi.draw.drawDetections(canvasElement, resizedDetections);
                }
            }, 100);
        };

        startFaceDetection();
        }


    function copiarTexto(id) {

        notify('Texto copiado com sucesso!');
        // text area method
        let textArea = document.createElement("textarea");
        textArea.value = document.getElementById(id).value;
        // make the textarea out of viewport
        textArea.style.position = "fixed";
        textArea.style.left = "-999999px";
        textArea.style.top = "-999999px";
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        return new Promise((res, rej) => {
            // here the magic happens
            document.execCommand('copy') ? res() : rej();
            textArea.remove();
        });

    }

    function ResetSenha() {
        $.ajax({
            type: "PUT",
            url: "/Utilizadores/Senha",
            data: $("#frmSenha").serialize(),
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: function (result) {
                $(function () {
                    if (result == "") {
                        window.location.reload();

                    } else {
                        notifyError(result);
                    }
                });
            }
        });
    }

    function AtualizarUtilizador() {
        $.ajax({
            type: "PUT",
            url: "/Utilizadores/Utilizador",
            data: $("#frmUtilizador").serialize(),
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: function (result) {
                $(function () {
                    if (result == "1") {
                        notify("Utilizador atualizado com sucesso!");
                        window.location.reload();
                    } else {
                        notifyError("Erro ao atualizar o utilizador");
                    }
                });
            }
        });
    }

    function GerarApiKey() {
        $.ajax({
            type: "PUT",
            url: "/Utilizadores/Utilizador/" + document.getElementById("txtHiddenIdUtilizador").value,
            data: { api: 1 },
            traditional: true,
            success: function (result) {
                if (result != "") {
                    $(function () {
                        document.getElementById("txtApiKey").value = result;
                        notify('API KEY gerada com sucesso!');
                        window.location.reload();
                    });
                } else {
                    $(function () {
                        notifyError('Não foi possivel gerar a API KEY!');
                    });
                }
            }
        });
    }
</script>