@model IEnumerable<FT_Management.Models.Marcacao>

@{
    ViewData["Title"] = "Pendentes";
}

<div class="columns is-gapless">
    <div class="column mx-1">
        <div class="card has-table has-mobile-sort-spaced has-background-info-light">
            <header class="card-header">
                <p class="card-header-title">
                    <span class="icon"><i class="fa-solid fa-screwdriver-wrench"></i></span>
                    Pedidos de Peças
                </p>
            <a class="card-header-icon button is-info m-1 is-disabled">@Model.Where(e => e.EstadoMarcacaoDesc != "Pedido Orçamento").Count()</a>
            </header>
            <div class="card-content">
                <div class="b-table">
                    <div class="table-wrapper has-mobile-cards">
                        @if (Model.Where(e => e.EstadoMarcacaoDesc != "Pedido Orçamento").Count() == 0)
                        {
                            <button class="button is-rounded is-fullwidth" disabled>Não foram encontradas marcações!</button>
                        }
                        else
                        {
                            <table class="table is-fullwidth has-background-info-light">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().IdMarcacao)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Cliente.NomeCliente)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().DiffDias)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Tecnico.NomeCompleto)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().EstadoMarcacaoDesc)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                    @foreach (var item in Model.Where(e => e.EstadoMarcacaoDesc != "Pedido Orçamento"))
                                    {
                                            <tr style="font-weight:bold;border:0px" class="lista-toggle @(item.DiffDias > 30 ? "has-background-danger" : (item.DiffDias > 15 ? "has-background-warning" : "")) ">
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().IdMarcacao)">@item.IdMarcacao</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().Cliente.NomeCliente)">@item.Cliente.NomeCliente</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().DiffDias)">@(item.DiffDias == 0 ? "< 1" : @item.DiffDias.ToString())</td>                                                
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().Tecnico.NomeCompleto)">@item.Tecnico.NomeCompleto</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().EstadoMarcacaoDesc)">@item.EstadoMarcacaoDesc</td>
                                                <td class="is-actions-cell">
                                                    <a class="button is-success is-rounded is-fullwidth" onclick="window.open('@(Url.Action("Pedido", "Pedidos", new { id = item.IdMarcacao, target="_blank" }))')">
                                                        <span class="icon is-small">
                                                            <i class="fa-solid fa-eye"></i>
                                                        </span>
                                                    </a>     
                                                </td>
                                            </tr>

                                            <tbody class="detail is-hidden">
                                                @foreach (var linha in item.LstAtividade.OrderBy(d => d.Data).Where(d => d.Tipo != 49))
                                                {
                                                    <tr>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Nome)" colspan="2">@linha.Nome</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Id)">@(linha.Tipo == 0 ? "Email" : @linha.Id)</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().CriadoPor)">@linha.CriadoPor</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Data)" colspan="2">@linha.Data</td>
                                                    </tr>
                                                }
                                            </tbody>

                                    }
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="column mx-1">
        <div class="card has-table has-mobile-sort-spaced has-background-success-light">
            <header class="card-header">
                <p class="card-header-title">
                    <span class="icon"><i class="fa-solid fa-file-invoice"></i></span>
                    Pedidos de Orçamento
                </p>
            <a class="card-header-icon button is-info m-1 is-disabled">@Model.Where(e => e.EstadoMarcacaoDesc == "Pedido Orçamento").Count()</a>
            </header>
            <div class="card-content">
                <div class="b-table">
                    <div class="table-wrapper has-mobile-cards">
                        @if (Model.Where(e => e.EstadoMarcacaoDesc == "Pedido Orçamento").Count() == 0)
                        {
                            <button class="button is-rounded is-fullwidth" disabled>Não foram encontradas marcações!</button>
                        }
                        else
                        {
                            <table class="table is-fullwidth has-background-success-light">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().IdMarcacao)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Cliente.NomeCliente)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().DiffDias)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Tecnico.NomeCompleto)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().EstadoMarcacaoDesc)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                    @foreach (var item in Model.Where(e => e.EstadoMarcacaoDesc == "Pedido Orçamento"))
                                    {
                                            <tr style="font-weight:bold;" class="lista-toggle @(item.DiffDias > 30 ? "has-background-danger" : (item.DiffDias > 15 ? "has-background-warning" : "")) ">
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().IdMarcacao)">@item.IdMarcacao</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().Cliente.NomeCliente)">@item.Cliente.NomeCliente</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().DiffDias)">@(item.DiffDias == 0 ? "< 1" : @item.DiffDias.ToString())</td>                                                
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().Tecnico.NomeCompleto)">@item.Tecnico.NomeCompleto</td>
                                                <td style="border:0px" data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().EstadoMarcacaoDesc)">@item.EstadoMarcacaoDesc</td>
                                                <td class="is-actions-cell">
                                                    <a class="button is-success is-rounded is-fullwidth" onclick="window.open('@(Url.Action("Pedido", "Pedidos", new { id = item.IdMarcacao, target="_blank" }))')">
                                                        <span class="icon is-small">
                                                            <i class="fa-solid fa-eye"></i>
                                                        </span>
                                                    </a>     
                                                </td>
                                            </tr>
                                            
                                            <tbody class="detail is-hidden">
                                                @foreach (var linha in item.LstAtividade.OrderBy(d => d.Data).Where(d => d.Tipo != 49))
                                                {
                                                    <tr>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Nome)" colspan="2">@linha.Nome</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Id)">@(linha.Tipo == 0 ? "Email" : @linha.Id)</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().CriadoPor)">@linha.CriadoPor</td>
                                                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().LstAtividade.FirstOrDefault().Data)" colspan="2">@linha.Data</td>
                                                    </tr>
                                                }
                                            </tbody>
                                    }
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
    let cardToggles = document.getElementsByClassName('lista-toggle');
    for (let i = 0; i < cardToggles.length; i++) {
        cardToggles[i].addEventListener('click', e => {
            e.currentTarget.parentElement.nextElementSibling.classList.toggle('is-hidden');
        });
    }
    });
</script>