@model FT_Management.Models.Visita


@{
    ViewData["Title"] = "Visita - " + Model.Cliente.NomeCliente;
}


<style>
    .tabs-content li {
        display: none;
        list-style: none;
    }

    .tabs-content li.is-active {
        display: block;
    }
</style>

<div class="container">
    <div class="columns is-mobile is-centered">
        <div class="column is-12">
            <div class="tile is-centered">
                <div class="tile is-parent is-vertical">
                    <article class="tile is-child notification is-info">
                        @if (Model.Contacto.IdContacto > 0)
                        {
                            <p class="title"
                                onclick="location.href = '@(Url.Action("Editar", "Contactos", new { id = Model.Contacto.IdContacto }))'"
                                type="button">
                                <span class="icon mr-3">
                                    <i class="fas fa-calendar-day"></i>
                                </span>
                                <span>@Model.Cliente.NomeCliente</span>
                            </p>
                        }
                        else
                        {
                            <p class="title"
                                onclick="location.href = '@(Url.Action("Cliente", "Clientes", new { IdCliente = @Model.Cliente.IdCliente, IdLoja = @Model.Cliente.IdLoja }))'">
                                <span class="icon mr-3">
                                    <i class="fas fa-calendar-day"></i>
                                </span>
                                <span>@Model.Cliente.NomeCliente</span>
                            </p>
                        }
                    </article>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />

<form asp-action="Visita" asp-route-returnurl="@ViewData["ReturnUrl"]">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="IdVisita" />
    <input type="hidden" asp-for="EstadoVisita" />
    <input type="hidden" asp-for="ResumoVisita" />
    <input type="hidden" asp-for="Cliente.IdCliente" />
    <input type="hidden" asp-for="Cliente.IdLoja" />
    <input type="hidden" asp-for="Contacto.IdContacto" />

    <div class="container">
        <div class="tabs-wrapper">
            <div class="tabs is-centered is-boxed">
                <ul>
                    <li class="is-active">
                        <a>
                            <span>Dados</span>
                        </a>
                    </li>
                    <li>
                        <a>
                            <span>Observações</span>
                        </a>
                    </li>
                    <li>
                        <a>
                            <span>Propostas</span>
                        </a>
                    </li>
                    <li>
                        <a>
                            <span>Anexos</span>
                        </a>
                    </li>
                </ul>
            </div>

            <div class="tabs-content mx-2">
                <ul>
                    <li class="is-active">
                        <div class="columns is-multiline">
                            <div class="column is-3">
                                <label asp-for="IdVisita" class="label"></label>
                                <div class="field has-addons">
                                    <div class="control" style="width:100%">
                                        <input class="input" type="text" id="IdVisita" readonly asp-for="IdVisita">
                                    </div>
                                    @if (this.User.IsInRole("Admin"))
                                    {
                                        <div class="control">
                                            <a class="button is-info" href="~/Visitas/Editar?idVisita=@Model.IdVisita">
                                                <i class="fas fa-pencil"></i>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="column is-9">
                                <div class="field">
                                    <label asp-for="Cliente.NomeCliente" class="label"></label>
                                    <div class="control">
                                        <input class="input" type="text" asp-for="Cliente.NomeCliente" readonly>
                                    </div>
                                    <span asp-validation-for="Cliente.NomeCliente" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="column is-6">
                                <div class="field">
                                    <label asp-for="IdComercial" class="label"></label>
                                    <div class="select" style="width:100%">
                                        @{
                                            var LstComerciais = ViewData["Comerciais"] as IList<Utilizador>;
                                        }
                                        <select class="select" style="width:100%" disabled asp-for="IdComercial"
                                            asp-items="@(new SelectList(@LstComerciais, "Id", "NomeCompleto", Model.IdComercial))">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="column is-6">
                                <div class="field">
                                    <label asp-for="DataVisita" class="label"></label>
                                    <p class="control has-icons-left">
                                        <input asp-for="DataVisita" class="input" type="date" readonly />
                                        <span class="icon is-small is-left">
                                            <i class="fas fa-calendar-day"></i>
                                        </span>
                                    </p>
                                </div>
                            </div>
                            <div class="column is-12">
                                <div class="field">
                                    <label asp-for="ResumoVisita" class="label"></label>
                                    <div class="control">
                                        <textarea class="textarea" type="text" asp-for="ResumoVisita"
                                            readonly></textarea>
                                    </div>
                                    <span asp-validation-for="ResumoVisita" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="columns is-multiline">
                            <div class="column is-12">
                                <div class="field">
                                    <label asp-for="ObsVisita" class="label"></label>
                                    <div class="control">
                                        <textarea class="textarea" type="text" rows="10" asp-for="ObsVisita"></textarea>
                                    </div>
                                    <span asp-validation-for="ObsVisita" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <p class="control is-right">
                            <a class="button is-primary is-pulled-right is-fullwidth"
                                onclick="Bulma('#modalAdicionarProposta').modal().open();">
                                <span class="icon is-small">
                                    <i class="fas fa-plus"></i>
                                </span>
                                <span>Nova Proposta</span>
                            </a>
                        </p>
                        &nbsp;
                        @if (Model.Propostas.Count() == 0)
                        {
                            <button class="button is-danger is-rounded is-outlined is-fullwidth" disabled>Não foram
                                encontradas propostas!</button>
                        }
                        else
                        {
                            <div class="b-table">
                                <div class="table-wrapper has-mobile-cards">
                                    <table class="table is-hoverable is-narrow is-fullwidth">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model =>
                                                model.Propostas.FirstOrDefault().IdProposta)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model =>
                                                model.Propostas.FirstOrDefault().DataProposta)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model =>
                                                model.Propostas.FirstOrDefault().EstadoProposta)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model =>
                                                model.Propostas.FirstOrDefault().Comercial.NomeCompleto)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model =>
                                                model.Propostas.FirstOrDefault().ValorProposta)
                                                </th>
                                                <th>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Propostas)
                                            {
                                                <tr>
                                                    <td
                                                        data-label="@Html.DisplayNameFor(model => model.Propostas.FirstOrDefault().IdProposta)">
                                                        <span>@item.IdProposta.ToString()</span>
                                                    </td>
                                                    <td
                                                        data-label="@Html.DisplayNameFor(model => model.Propostas.FirstOrDefault().DataProposta)">
                                                        <span>@item.DataProposta.ToString("dd/MM/yyyy")</span>
                                                    </td>
                                                    <td
                                                        data-label="@Html.DisplayNameFor(model => model.Propostas.FirstOrDefault().EstadoProposta)">
                                                        @Html.DisplayFor(modelItem => item.EstadoProposta)
                                                    </td>
                                                    <td
                                                        data-label="@Html.DisplayNameFor(model => model.Propostas.FirstOrDefault().Comercial.NomeCompleto)">
                                                        @Html.DisplayFor(modelItem => item.Comercial.NomeCompleto)
                                                    </td>
                                                    <td
                                                        data-label="@Html.DisplayNameFor(model => model.Propostas.FirstOrDefault().ValorProposta)">
                                                        @Html.DisplayFor(modelItem => item.ValorProposta)
                                                    </td>
                                                    <td class="is-actions-cell">
                                                        <div class="btn-group float-right">
                                                            <a class="button is-info "
                                                                onclick="Bulma('#modalAdicionarAnexoProposta').modal().open();"><i
                                                                    class="fas fa-plus"></i></a>
                                                            <a class="button is-warning "
                                                                onclick="EditarProposta(@item.IdProposta);"><i
                                                                    class="fas fa-pencil"></i></a>
                                                            <a class="button is-success " href="@item.UrlProposta"
                                                                target="_blank"><i class="fas fa-paperclip"></i></a>
                                                            <a class="button is-danger "
                                                                href="~/Visitas/ApagarProposta/@item.IdProposta"><i
                                                                    class="fas fa-trash"></i></a>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    </li>
                    <li>
                        <div class="buttons">
                            <a class="button is-primary is-fullwidth"
                                onclick="Bulma('#modalAdicionarAnexo').modal().open();">
                                <span class="icon is-small">
                                    <i class="fas fa-plus"></i>
                                </span>
                                <span>Novo Anexo</span>
                            </a>
                            <a class="button is-fullwidth is-warning" @(Model.UrlAnexos.Length == 0 ? "disabled" : "")
                                href="@Model.UrlAnexos" target="_blank">
                                <span class="icon is-small">
                                    <i class="fas fa-eye"></i>
                                </span>
                                <span>Ver Anexos</span>
                            </a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    &nbsp;
    <div class="container">
        <input type="submit" value="Guardar Alterações" class="button is-info is-outlined is-fullwidth" />
    </div>
</form>

<div id="modalAdicionarAnexoProposta" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Adicionar Anexo</p>
        </header>
        <section class="modal-card-body">
            <div class="form-group">
                <form action="/Visitas/EnviarNextcloud/?Path=@Model.Cliente.NomeCliente&Folder=Propostas"
                    class="dropzone has-background-dark-dark has-background-light-light" id="my-awesome-dropzone"></form>
            </div>
        </section>
        <footer class="modal-card-foot">
            <button type="button" class="button is-info"
                onclick="Bulma('#modalAdicionarAnexoProposta').modal().close();" id="btnConfirmAddAnexo"
                href="javascript:;">Fechar</button>
        </footer>
    </div>
</div>
<div id="modalAdicionarAnexo" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Adicionar Anexo</p>
        </header>
        <section class="modal-card-body">
            <div class="form-group">
                <form action="/Visitas/AdicionarAnexo/?IdVisita=@Model.IdVisita" class="dropzone has-background-dark-dark has-background-light-light"
                    id="my-awesome-dropzone2"></form>
            </div>
        </section>
        <footer class="modal-card-foot">
            <button type="button" class="button is-info is-fullwidth"
                onclick="Bulma('#modalAdicionarAnexo').modal().close();" id="btnConfirmAddAnexo"
                href="javascript:;">Fechar</button>
        </footer>
    </div>
</div>
<div id="modalAdicionarProposta" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Adicionar Proposta</p>
            <button class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div class="field">
                <label>Data</label>
                <div class="field has-addons">
                    <p class="control" style="width:100%">
                        <input type="date" class="input " value="@(DateTime.Now.ToString("yyyy-MM-dd"))" id="txtData">
                        <script>
                            bulmaCalendar.attach('#txtData', {
                                color: 'info',
                                lang: 'pt',
                                displayMode: 'dialog',
                                dateFormat: 'MM/dd/yyyy',
                                todayLabel: 'Hoje',
                                showClearButton: false,
                                cancelLabel: 'Cancelar'
                            });
                        </script>
                    </p>
                </div>
            </div>
            <div class="field">
                <label>Estado da Proposta</label>
                <div class="select" style="width:100%">
                    <select class="select" style="width:100%" id="txtEstado">
                        <option selected>Por Criar (Será enviado um email)</option>
                        <option>Criada</option>
                        <option>Enviada</option>
                        <option>Por Aceitar</option>
                        <option>Aceite</option>
                        <option>Finalizada</option>
                    </select>
                </div>
            </div>
            <div class="field">
                <label>Valor da Proposta</label>
                <div class="field has-addons">
                    <p class="control" style="width:100%">
                        <input class="input" type="text" id="txtValor" placeholder="Valor">
                    </p>
                    <p class="control">
                        <a class="button is-static">
                            €
                        </a>
                    </p>
                </div>
            </div>
            <div class="form-group">
                <textarea id="txtComentario" class="textarea is-info" rows="5" placeholder="Observações"
                    required></textarea>
            </div>
        </section>
        <footer class="modal-card-foot">
            <a type="button" class="button is-info is-fullwidth" onclick="AdicionarProposta();"
                href="javascript:;">Adicionar</a>
        </footer>
    </div>
</div>

<input hidden id="txtHiddenIdProposta" />
<div id="modalEditarProposta" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Editar Proposta</p>
            <button class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div class="field">
                <label>Data</label>
                <div class="field has-addons">
                    <p class="control" style="width:100%">
                        <input type="date" class="input " value="@(DateTime.Now.ToString("yyyy-MM-dd"))"
                            id="txtDataEditar" disabled>
                    </p>
                </div>
            </div>
            <hr />
            <div class="field">
                <label>Estado da Proposta</label>
                <div class="select" style="width:100%">
                    <select class="select" style="width:100%" id="txtEstadoEditar">
                        <option selected>Por Criar (Será enviado um email)</option>
                        <option>Criada</option>
                        <option>Enviada</option>
                        <option>Por Aceitar</option>
                        <option>Aceite</option>
                        <option>Finalizada</option>
                    </select>
                </div>
            </div>
            <div class="field">
                <label>Valor da Proposta</label>
                <div class="field has-addons">
                    <p class="control" style="width:100%">
                        <input class="input" type="text" id="txtValorEditar" placeholder="Valor">
                    </p>
                    <p class="control">
                        <a class="button is-static">
                            €
                        </a>
                    </p>
                </div>
            </div>
            <div class="form-group">
                <textarea id="txtComentarioEditar" class="textarea is-info" rows="5" placeholder="Observações"
                    required></textarea>
            </div>
        </section>
        <footer class="modal-card-foot">
            <a type="button" class="button is-success is-fullwidth" onclick="ConfirmEditarProposta();"
                href="javascript:;">Guardar</a>
        </footer>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    function EditarProposta(id) {
        document.getElementById("txtHiddenIdProposta").value = id;
        $.ajax({
            url: '/Visitas/ObterProposta/' + id,
            type: "GET",
            success: function (response) {
                document.getElementById('txtDataEditar').value = response.dataProposta.slice(0, 10);
                document.getElementById("txtEstadoEditar").value = response.estadoProposta;
                document.getElementById("txtValorEditar").value = response.valorProposta;
                document.getElementById("txtComentarioEditar").value = response.obsProposta;

                Bulma('#modalEditarProposta').modal().open();
            },
            error: function (response) {
                notifyError("Ocorreu um erro ao obter a proposta!");
            },
            failure: function (response) {
                notifyError("Ocorreu um erro ao obter a proposta!");
            }
        });
    }

    function ConfirmEditarProposta() {
        var formData = new FormData();
        formData.append("estado", document.getElementById("txtEstadoEditar").value);
        formData.append("valor", document.getElementById("txtValorEditar").value);
        formData.append("obs", document.getElementById("txtComentarioEditar").value);
        $.ajax(
            {
                url: "/Visitas/EditarProposta/" + document.getElementById("txtHiddenIdProposta").value,
                data: formData,
                processData: false,
                contentType: false,
                type: "POST",
                success: function (data) {
                    location.reload();
                }
            }
        );
    }

    function AdicionarAnexo(inputTxt) {
        var formData = new FormData();
        formData.append("files", document.getElementById('fileinput2').files[0]);

        $.ajax(
            {
                url: "/Visitas/AdicionarAnexo?IdVisita=@Model.IdVisita&ReturnUrl=Editar?IdVisita=@Model.IdVisita",
                data: formData,
                processData: false,
                contentType: false,
                type: "POST",
                success: function (data) {
                    location.reload();
                }
            }
        );
    }
    function AdicionarProposta() {
        var formData = new FormData();
        formData.append("data", document.getElementById("txtData").value);
        formData.append("estado", document.getElementById("txtEstado").value);
        formData.append("valor", document.getElementById("txtValor").value);
        formData.append("obs", document.getElementById("txtComentario").value);
        $.ajax(
            {
                url: "/Visitas/AdicionarProposta?IdVisita=@Model.IdVisita&ReturnUrl=Editar?IdVisita=@Model.IdVisita",
                data: formData,
                processData: false,
                contentType: false,
                type: "POST",
                success: function (data) {
                    location.reload();
                }
            }
        );
    }
    $(function () {
        $("#txtCustomer").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Clientes/Clientes/',
                    data: { "prefix": request.term },
                    type: "GET",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.nomeCliente,
                                val: item.idCliente,
                                val2: item.idLoja,
                                nif: item.numeroContribuinteCliente,
                                mor: item.moradaCliente
                            };
                        }))
                    },
                    error: function (response) {
                        notifyError("Ocorreu um erro ao obter o cliente!");
                    },
                    failure: function (response) {
                        notifyError("Ocorreu um erro ao obter o cliente!");
                    }
                });
            },
            select: function (e, i) {
                $("#IdCliente").val(i.item.val);
                $("#IdLoja").val(i.item.val2);
                $("#NIFCliente").val(i.item.nif);
                $("#MoradaCliente").val(i.item.mor);
            },
            minLength: 1
        }).css('z-index', 10);
    });
    function guardar() {
        $('form').submit();
    }
</script>