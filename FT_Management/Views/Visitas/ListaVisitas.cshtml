@model IEnumerable<FT_Management.Models.Visita>

@{
    ViewData["Title"] = "Agendamentos - Comercial";
}

<div class="container">
    <div class="columns">
        <div class="column">
            <div class="tile">
                <div class="tile is-parent is-vertical">
                    <article class="tile is-child notification is-info">
                        <p class="title">Agendamento Comercial</p>
                    </article>
                </div>
            </div>
        </div>
        <div class="column is-right my-auto">
            <form method="get" action="ListaVisitas">
                <input type="hidden" id="hiddenIdComercial" value="@ViewData["IdComercial"]" name="IdComercial">
               <input class="input" type="date" value="@(DateTime.Parse(ViewData["DataVisitas"].ToString()).ToString("yyyy-MM-dd"))" id="txtData" name="DataVisitas"/>
                <script>
                    bulmaCalendar.attach('#txtData', {
                        color: 'info',
                        lang: 'pt',
                        dateFormat: 'dd/MM/yyyy',
                        todayLabel: 'Hoje',
                        showClearButton: false,
                        cancelLabel: 'Cancelar'
                    });
                    document.getElementById('txtData').bulmaCalendar.on('select', function(datepicker) {
                            document.getElementById('txtData').value = datepicker.data.value();
                            $('form').submit();
                    });
                </script>
            </form>
            <div class="buttons is-right my-1">
                @if (this.User.IsInRole("Admin"))
                {
                    <p class="control">
                        <a class="button is-info is-outlined" asp-action="CalendarioView">
                            <span class="icon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                            <span>Calendário</span>
                        </a>
                    </p>
                }
                else
                {
                    <p class="control">
                        <a class="button is-info is-outlined" asp-action="CalendarioComercial">
                            <span class="icon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                            <span>Calendário</span>
                        </a>
                    </p>
                }
            </div>
        </div>
    </div>
</div>
<hr />

@if (Model.Count() == 0)
{
    <div class="container">
        <br />
        <button class="button is-danger is-fullwidth" disabled>Não foram encontradas visitas!</button>
    </div>
}
else
{
    <div class="container ">
        <div class="task-container columns is-multiline mx-1">
            @foreach (var item in Model)
            {
                <div class="column is-6">
                    <div class="card">
                        <header class="card-header @(item.EstadoVisita == "Finalizado" ? "has-background-success" : "") @(item.EstadoVisita != "Agendado" & @item.EstadoVisita != "Finalizado" ? "has-background-warning" : "")">
                            <button class="button is-info mx-1 is-rounded my-auto"><p class="is-uppercase has-text-weight-bold is-size-6">@item.DataVisita.Day.ToString() @item.DataVisita.ToString("MMM")</p></button>
                            <p class="subtitle my-1 has-text-centered column">
                                <b>@item.IdVisita</b> - @item.Cliente.NomeCliente
                            </p>
                            <button class="card-header-icon card-toggle" style="text-align:right" aria-label="more options">
                                <span class="icon">
                                    <i class="fas fa-angle-down" aria-hidden="true"></i>
                                </span>
                            </button>
                        </header>
                        <div class="card-content is-hidden">
                            <div class="content">
                                Estado: <b>@item.EstadoVisita</b><br />
                                Prioridade: <b>@item.PrioridadeVisita</b><br />
                                <hr />
                                <p style="white-space: pre-line">@item.ResumoVisita</p>
                            </div>
                        </div>
                        <footer class="card-footer">
                            <div class="container is-12">
                                <div class="buttons has-addons">
                                    <a class="button is-outlined is-info is-large card-footer-item @(item.Cliente.TelefoneCliente.Length < 9 ? "disabled" : "")" href="tel:@item.Cliente.TelefoneCliente"><i class="fa-solid fa-phone" style="margin-top:5px"></i></a>
                                    <a class="button is-outlined is-primary is-large card-footer-item @(item.Cliente.MoradaCliente.Length < 1 ? "disabled" : "")" href="@Utilizador.ObterLinkMapa(item.Cliente, User.Claims.Where(u => u.Type.Contains("userdata")).First().Value)"><i class="fas fa-location-arrow float-left" style="margin-top:5px"></i></a>
                                    <a class="button is-outlined is-link is-large card-footer-item" onclick="location.href = '@(Url.Action("Visita", "Visitas", new { idVisita = item.IdVisita }))'"><i class="fas fa-info float-left" style="margin-top:5px"></i></a>
                                        <a class="button is-outlined is-danger is-large card-footer-item" onclick="location.href = '@(Url.Action("Apagar", "Visitas", new { idVisita = item.IdVisita, ReturnUrl = "ListaVisitas/?idComercial=" + item.IdComercial + "&DataVisitas=" + item.DataVisita.ToShortDateString() }))'"><i class="fas fa-trash" style="margin-top:5px"></i></a>
                                        <a class="button is-outlined is-warning is-large card-footer-item" onclick="location.href = '@(Url.Action("Editar", "Visitas", new { idVisita = item.IdVisita, ReturnUrl = "ListaVisitas/?idComercial=" + item.IdComercial + "&DataVisitas=" + item.DataVisita.ToShortDateString() }))'"><i class="fas fa-pencil-alt" style="margin-top:5px"></i></a>
                                </div>
                            </div>
                        </footer>
                    </div>
                </div>
            }
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        let cardToggles = document.getElementsByClassName('card-toggle');
        for (let i = 0; i < cardToggles.length; i++) {
            cardToggles[i].addEventListener('click', e => {
                e.currentTarget.parentElement.parentElement.childNodes[3].classList.toggle('is-hidden');
            });
        }
    });
</script>


