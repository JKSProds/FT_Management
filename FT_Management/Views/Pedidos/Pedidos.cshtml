@model IEnumerable<FT_Management.Models.Marcacao>

@{
    ViewData["Title"] = "Agendamento";
}

<input type="hidden" id="txtStampMarcacao">

<div class="container">
    <div class="columns">
        <div class="column">
            <div class="tile">
                <div class="tile is-parent is-vertical">
                    <article class="tile is-child notification is-info">
                        <p class="title">
                            <span class="icon mr-3">
                                <i class="fas fa-calendar-days"></i>
                            </span>
                            <span>Agendamento Técnico</span>
                        </p>
                    </article>
                </div>
            </div>
        </div>
        <div class="column is-right my-auto">
            <form method="get" action="Pedidos">
                <input type="hidden" id="hiddenIdTecnico" value="@ViewData["IdTecnico"]" name="IdTecnico">
                        <input class="input" type="date" value="@(DateTime.Parse(ViewData["DataPedidos"].ToString()).ToString("yyyy-MM-dd"))" id="txtData" name="DataPedidos"/>
                        <script>
                            bulmaCalendar.attach('#txtData', {
                                color: 'info',
                                lang: 'pt',
                                dateFormat: 'dd/MM/yyyy',
                                todayLabel: 'Hoje',
                                showClearButton: false,
                                cancelLabel: 'Cancelar'
                            });
                            document.getElementById('txtData').bulmaCalendar.on('select', function(datepicker) {
                                  document.getElementById('txtData').value = datepicker.data.value();
                                  $('form').submit();
                            });
                        </script>
            </form>
            <div class="buttons is-right my-1">
                <p class="control">
                    <a class="button is-primary is-outlined" onclick="window.location.href = '/Pedidos/Pedidos/@ViewData["IdTecnico"]'">
                        <span class="icon">
                            <i class="fa fa-calendar-day"></i>
                        </span>
                        <span>Hoje</span>
                    </a>
                </p>

                <p class="control">
                    <a class="button is-warning" onclick="window.location.href = '/Pedidos/Pendentes/@ViewData["IdTecnico"]'">
                        <span class="icon">
                            <i class="fas fa-exclamation"></i>
                        </span>
                        <span>Pendentes</span>
                    </a>
                </p>
                <p class="control">
                    <a class="button is-info is-outlined" href="/Pedidos/Agendamento/@ViewData["IdTecnico"]">
                        <span class="icon">
                            <i class="fas fa-calendar-alt"></i>
                        </span>
                        <span>Calendário</span>
                    </a>
                </p>
                  <p class="control">
                    <a class="button is-primary" onclick="window.location.href = '/Produtos/Armazem/@ViewData["IdArmazem"]'">
                        <span class="icon">
                            <i class="fa fa-wrench"></i>
                        </span>
                        <span>Armazém</span>
                    </a>
                </p>
                @if (Model.Count() > 0)
                {
                    <p class="control">
                    <a class="button is-info" href="@Url.Action("Direcaos", "Pedidos", new {id = @ViewData["IdTecnico"], DataPedidos = DateTime.Parse(ViewData["DataPedidos"].ToString()).ToString("yyyy-MM-dd")})">
                        <span class="icon">
                            <i class="fa-solid fa-map-location"></i>
                        </span>
                        <span>Verificar Rota</span>
                    </a>
                </p>
                }
            </div>

        </div>
    </div>
</div>
<hr />

@if (Model.Count() == 0)
{
<div class="container">
    <br />
    <button class="button is-danger is-fullwidth" disabled>Não foram encontradas marcações!</button>
</div>
}
else
{
    <div class="container ">
        <div class="task-container columns is-multiline mx-1">
            @foreach (var item in Model)
            {
                <div class="column is-6">
                    <div class="card">
                        <header class="card-header card-toggle" style="background:@item.Cor;">
                            <button class="button mx-1 is-rounded my-auto @(item.PrioridadeMarcacao == "Normal" ? "is-info" : item.PrioridadeMarcacao == "Urgente" ? "is-warning" : "is-danger") "><p class="is-uppercase has-text-weight-bold @(item.Hora.Length==0 && item.Periodo.Length==0 ? "is-size-6" : "is-size-9")" style="line-height:1;">@item.DataMarcacao.Day.ToString() @item.DataMarcacao.ToString("MMM")<br />@(item.Hora.Length>0 ? item.Hora : item.Periodo)</p></button>
                            <p class="is-size-6 my-1 has-text-centered column">
                                @item.EmojiEstado<b>@item.IdMarcacao</b> - @item.Cliente.NomeCliente
                            </p>
                            <button class="card-header-icon" style="text-align:right" aria-label="more options">
                                <span class="icon">
                                    @if (item.LstAnexos.Count() > 0) { <i class="fa-solid fa-paperclip"></i> }
                                </span>
                                <span class="icon">
                                    <i class="fas @(item.LstComentarios.Count() > 0 ? "fa-comment-dots" : "fa-angle-down")" aria-hidden="true"></i>
                                </span>
                            </button>
                        </header>
                        <div class="card-content is-hidden">
                            <div class="content">
                                @Html.DisplayNameFor(model => model.DataPedido): <b>@item.DataPedido.ToShortDateString()</b><br />
                                @Html.DisplayNameFor(model => model.EstadoMarcacaoDesc): <b>@item.EstadoMarcacaoDesc</b><br />
                                @Html.DisplayNameFor(model => model.PrioridadeMarcacao): <b>@item.PrioridadeMarcacao</b><br />
                                @Html.DisplayNameFor(model => model.Referencia): <b>@item.Referencia</b>
                                <hr />
                                <p style="white-space: pre-line">@item.ResumoMarcacao</p>
                                <hr />
                                @if (item.LstComentarios.Count > 0)
                                {
                                    <p class="subtitle">Comentários</p>
                                    <div class="b-table">
                                    <div class="table-wrapper has-mobile-cards">    
                                    <table class="table table-hover">
                                        <thead><tr><th>@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().Utilizador.NomeCompleto)</th><th>@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().Descricao)</th><th>@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().DataComentario)</th>
                                        <tbody>

                                            @foreach (var c in item.LstComentarios)
                                            {
                                                <tr>
                                                    <td data-label="@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().Utilizador.NomeCompleto)"><span>@c.Utilizador.NomeCompleto</span></td>
                                                    <td data-label="@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().Descricao)"><span>@c.Descricao</span></td>
                                                    <td data-label="@Html.DisplayNameFor(model => model.LstComentarios.FirstOrDefault().DataComentario)"><span>@c.DataComentario</span></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <footer class="card-footer">
                            <div class="container is-12">
                                <div class="buttons has-addons">
                                        <a class="button is-danger is-outlined is-large card-footer-item @(item.EstadoMarcacaoDesc == "Em Curso" ? "" : "is-hidden")" onclick="location.href = '@(Url.Action("Adicionar", "FolhasObra", new {id = item.MarcacaoStamp }))'" id="btnStop_@item.MarcacaoStamp"><i class="fas fa-stop float-left" style="margin-top:5px"></i></a>
                                        <a class="button is-success is-large card-footer-item @(item.EstadoMarcacaoDesc == "Em Curso" || item.EstadoMarcacaoDesc == "Finalizado" || item.EstadoMarcacaoDesc == "Cancelado"  ? "is-hidden" : "")" id="btnStart_@item.MarcacaoStamp" onclick="document.getElementById('txtStampMarcacao').value = '@item.MarcacaoStamp';Bulma('#modalIniciarAssistencia').modal().open();"><i class="fas fa-play float-left" style="margin-top:5px"></i></a>
                                    @if (item.Cliente.ContactoValido)
                                    {
                                        <a class="button is-info is-large card-footer-item" href="tel:@item.Cliente.TelefoneCliente"><i class="fa-solid fa-phone" style="margin-top:5px"></i></a>
                                    }
                                    @if (item.Cliente.MoradaValida)
                                    {
                                        <a class="button is-primary is-large card-footer-item" id="btnDirecoes_@item.MarcacaoStamp" href="@Utilizador.ObterLinkMapa(item.Cliente, User.Claims.Where(u => u.Type.Contains("userdata")).First().Value)"><i class="fas fa-location-arrow float-left" style="margin-top:5px"></i></a>
                                    }
                                    <a class="button is-info is-outlined is-large card-footer-item" onclick="location.href = '@(Url.Action("Etiqueta", "Pedidos", new {id = item.IdMarcacao }))'"><i class="fas fa-sticky-note float-left" style="margin-top:5px"></i></a>
                                    <a class="button is-info is-large card-footer-item" onclick="location.href = '@(Url.Action("Pedido", "Pedidos", new {id = item.IdMarcacao }))'"><i class="fas fa-info float-left" style="margin-top:5px"></i></a>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a class="button is-warning is-large card-footer-item" onclick="location.href = '@(Url.Action("Editar", "Pedidos", new { id = item.IdMarcacao }))'"><i class="fas fa-pencil float-left" style="margin-top:5px"></i></a>
                                    }
                                </div>
                            </div>
                        </footer>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div id="modalIniciarAssistencia" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Iniciar Assistência</p>
            <button type="button" class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div class="modal-body">
                <p>Deseja iniciar a deslocação para o cliente ou efetuar a folha de obra?</p>
            </div>
        </section>
        <footer class="modal-card-foot">
            <div class="buttons is-centered" style="width:100%">
            <button type="button" id="btnIniciarDeslocacao" class="button is-success is-large"
                onclick="IniciarAssistencia(document.getElementById('txtStampMarcacao').value);" href="javascript:;">
                <span class="icon">
                    <i class="fa-solid fa-car-side"></i>
                </span>
                <span>Iniciar Deslocação</span>
            </button>
                        <button type="button" class="button is-info is-large"
                onclick="location.href = '/FolhasObra/Adicionar/' + document.getElementById('txtStampMarcacao').value;" href="javascript:;">
                <span class="icon">
                    <i class="fa-solid fa-file-circle-plus"></i>
                </span>
                <span>Iniciar Assistência</span>
            </button>
            </div>
        </footer>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        let cardToggles = document.getElementsByClassName('card-toggle');
        for (let i = 0; i < cardToggles.length; i++) {
            cardToggles[i].addEventListener('click', e => {
                e.currentTarget.parentElement.childNodes[3].classList.toggle('is-hidden');
            });
        }
    });

    function IniciarAssistencia(stamp) {
        document.getElementById('btnStart_' + stamp).classList.add('is-loading');
        document.getElementById('btnIniciarDeslocacao').classList.add('is-loading');
        $.ajax({
            type: "POST",
            url: "/Pedidos/Iniciar/" + stamp,
            traditional: true,
            success: function (result) {
                $(function () {
                    if (result == "1") {
                       document.getElementById('btnDirecoes_' + stamp).click();
                       document.getElementById('btnStart_' + stamp).classList.add('is-hidden');
                       document.getElementById('btnStop_' + stamp).classList.remove('is-hidden');
                       notify("Marcação atualizada com sucesso!");
                    } else {
                        document.getElementById('btnStart_' + stamp).classList.remove('is-loading');
                        notifyError('Ocorreu um erro ao iniciar a assistencia!');
                    }
                    Bulma('#modalIniciarAssistencia').modal().close();
                    document.getElementById('btnStart_' + stamp).classList.remove('is-loading');
                    document.getElementById('btnIniciarDeslocacao').classList.remove('is-loading');
                });
            }
        });
    }
 
</script>
