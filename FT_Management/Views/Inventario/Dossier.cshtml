@model FT_Management.Models.Picking

@{
    ViewData["Title"] = "Inventário - Armazém " + Model.NomeCliente;
}
<div class="pageloader is-info" id="pageloader"><span class="title">A carregar ...</span></div>
    <div class="container">
        <div class="columns">
            <div class="column">
                <div class="tile">
                    <div class="tile is-parent is-vertical">
                        <article class="tile is-child notification is-info">
                            <p class="title">
                                <span class="icon mr-3">
                                   <i class="fa-solid fa-barcode"></i>
                                </span>
                                <span>Inventário Nº @Model.IdPicking (@Model.EditadoPor)</span>
                            </p>
                        </article>
                    </div>
                </div>
            </div>
            <div class="column my-auto">
                <div class="field is-horizontal">
                  <div class="field-body">
                    <div class="field">
                      <p class="control is-expanded has-icons-left">
                        <input class="input" type="text" readonly value="@Model.NomeCliente">
                        <span class="icon is-small is-left">
                            <i class="fas fa-warehouse"></i>
                        </span>
                      </p>
                    </div>
                    <div class="field">
                      <div class="control">
                        <a class="button is-primary is-outlined is-fullwidth"  onclick="Bulma('#ModalAdicionarLinha').modal().open();">
                            <span class="icon">
                                <i class="fas fa-plus"></i>
                            </span>
                            <span>Adicionar</span>
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="field is-horizontal">
                      <div class="field-body">
                        <div class="field">
                          <p class="control is-expanded has-icons-left">
                            <input class="input" type="text" id="txtRefPesquisa" value="@ViewData["Referencia"]" placeholder="Referência">
                            <span class="icon is-small is-left">
                                <i class="fa-solid fa-arrow-down-1-9""></i>
                            </span>
                          </p>
                        </div>
                        <div class="field">
                          <div class="control buttons">
                            <button type="submit" class="button is-info is-outlined" onclick="filtrar();">
                                <span class="icon">
                                    <i class="fas fa-search"></i>
                                </span>
                                <span>Pesquisar</span>
                            </button>
                            <a class="button is-outlined" href='/Inventario/Dossier/@Model.Picking_Stamp'>
                                <span class="icon">
                                    <i class="fas fa-backspace"></i>
                                </span>
                                <span>Limpar</span>
                            </a>
                          </div>
                        </div>
                      </div>
                     
                </div>
            </div>
        </div>
    </div>
<hr />  
@if (Model.Linhas.Count() == 0)
{
        <button class="button is-danger is-rounded is-outlined is-large is-fullwidth" disabled>Não foram encontradas linhas!</button>
}
else{
    <div class="container">
    <div class="b-table">
    <div class="table-wrapper has-mobile-cards"> 
        <table class="table is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Linhas.First().Ref_linha)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Linhas.First().Nome_Linha)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model =>  model.Linhas.First().Qtd_Linha)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Linhas.First().EditadoPor)
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Linhas)
                {
                    <tr style="width:auto" id="linha_@item.Picking_Linha_Stamp">
                        <td data-label="@Html.DisplayNameFor(model => model.Linhas.First().Ref_linha)">
                            <span>@item.Ref_linha</span>
                        </td>
                        <td data-label="@Html.DisplayNameFor(model => model.Linhas.First().Nome_Linha)">
                            <span>@item.Nome_Linha</span>
                        </td>
                        <td data-label="@Html.DisplayNameFor(model => model.Linhas.First().Qtd_Linha)">
                            <span >@item.Qtd_Linha @item.TipoUnidade</span>
                        </td>
                        <td data-label="@Html.DisplayNameFor(model => model.Linhas.First().EditadoPor)">
                            <span>@item.EditadoPor</span>
                        </td>
                        <td style="min-width: 240px" class="is-actions-cell">
                            @if (item.Serie)
                                {
                                    <a class="button is-info" style="width:45%" onclick="AbrirModalSerie('@item.Picking_Linha_Stamp')"><i class="fas fa-eye"></i></a>
                                }
                                <a class="button is-danger" style="width:45%" onclick="ConfirmApagarLinha('@item.Picking_Linha_Stamp')"><i class="fas fa-trash-can"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        </div>
        </div>
    </div>
}

<div class="modal" id="ModalConfirmApagarLinha">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Apagar Linha</p>
    </header>
    <section class="modal-card-body">
        <div class="modal-body">
            <p>Tem a certeza que deseja apagar esta linha e todos os números de série associados?</p>
        </div>
  </section>
    <footer class="modal-card-foot">
      <button class="button is-danger" onclick="ApagarLinha(document.getElementById('txtHiddenStampLinha').value);">Confirmar</button>
      <button class="button" onclick="Bulma('#ModalConfirmApagarLinha').modal().close();">Não</button>
    </footer>
  </div>
</div>

<div class="modal" id="ModalSerie">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title is-size-6" id="txtHeaderSerieModal">###</p>
    </header>
    <section class="modal-card-body">
        <div class="modal-body" id="divSeriesModal">
            
        </div>
  </section>
    <footer class="modal-card-foot">
      <button class="button" onclick="Bulma('#ModalSerie').modal().close();">Fechar</button>
    </footer>
  </div>
</div>

<div class="modal" id="ModalAdicionarLinha">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Adicionar Linha</p>
    </header>
    <section class="modal-card-body">
        <div class="modal-body">
            <form method="POST" onsubmit="event.preventDefault();">
            <div class="field">
                <label class="label">Referência</label>
                <div class="field has-addons">
                  <div class="control" style="width:100%">
                        <input type="text" class="input" id="txtRef">
                  </div>
                  <div class="control">
                    <input type="submit" class="button is-info" id="btnSearchRef" onclick="PreencherRef(document.getElementById('txtRef').value);" value="Pesquisar">

                  </div>
                </div>
            </div>
            </form>
                <fieldset disabled>
                    <div class="field has-addons">
                      <div class="control" style="width:100%">
                    <input type="text" class="input" id="txtDesignacao">
                    </div>                    
                </div>
                </fieldset>
                <hr />
                <form method="POST" onsubmit="event.preventDefault();">
                <div class="field">
                <label class="label">Quantidade</label>
                <div class="field has-addons">
                  <div class="control" style="width:100%">
                        <input type="text" class="input" id="txtQtd">
                  </div>
                  <div class="control">
                    <input type="submit" class="button is-info" id="btnAdicionarLinha" onclick="AdicionarLinha(document.getElementById('txtRef').value,document.getElementById('txtQtd').value);" value="Criar Linha">
                  </div>
                </div>
            </div>
            </form>
            <hr>
            <form method="POST" onsubmit="event.preventDefault();">
            <div class="field" id="divSerie" hidden>
                <label class="label">Número de Série</label>
                <div class="field has-addons">
                  <div class="control" style="width:100%">
                        <input type="text" class="input" id="txtNumeroSerie">
                  </div>
                  <div class="control">
                    <input type="submit" value="Adicionar" class="button is-info" id="btnAdicionarNumeroSerie" onclick="AdicionarNumeroSerie(document.getElementById('txtHiddenStampLinha').value, document.getElementById('txtNumeroSerie').value);">
                  </div>
                </div>
            </div>
            </form>
        </div>
  </section>
    <footer class="modal-card-foot">
      <button class="button is-primary" type="button" onclick="Bulma('#ModalAdicionarLinha').modal().close();">Fechar</button>
    </footer>
  </div>
</div>

<input id="txtHiddenStampLinha" hidden />
<script>
    function filtrar() {
        window.location.href = '/Inventario/Dossier/@Model.Picking_Stamp?referencia=' + document.getElementById('txtRefPesquisa').value;
    }
    function AbrirModalSerie(id) {
        document.getElementById('txtHiddenStampLinha').value = id;
                 $.ajax({
            url: '/Inventario/ObterSerieLinha/',
            data: { "id": id},
            type: "POST",
            success: function (data) {
                if (data != '') {
                    document.getElementById('txtHeaderSerieModal').innerHTML = data[0].ref_linha + " - " + data[0].nome_Linha;
                   var html = "<table class='table is-hoverable' style='width:100%;'><tr><th>Nº de Série</th><th>Criado a:</th><th>Criado por:</th></tr>";
                   data.forEach(obj => {
                        console.log(obj);
                        html += "<tr><td>" + obj.numSerie + "</td><td>" + new Date(obj.criadoA).toLocaleDateString() + "</td><td>" + obj.criadoPor + "</td></tr>";
                    });
                   html += "</table>";
                   document.getElementById("divSeriesModal").innerHTML = html;
                           Bulma('#ModalSerie').modal().open();
                } else {
                     notifyError('Ainda não existem numeros de série associados a esta linha!');           
                }
            },
            error: function (data) {
                     notifyError('Ocorreu um erro ao obter os números de série associados a esta linha do dossier!');           
            },
            failure: function (data) {
                     notifyError('Ocorreu um erro ao obter os números de série associados a esta linha do dossier!');           
            }
        });
    }

    function ConfirmApagarLinha(id) {
        document.getElementById('txtHiddenStampLinha').value = id;
        Bulma('#ModalConfirmApagarLinha').modal().open();
    }
    function ApagarLinha(id) {
         $.ajax({
            url: '/Inventario/ApagarLinha/',
            data: { "stamp": '@Model.Picking_Stamp', "stamp_linha": id},
            type: "POST",
            success: function (data) {
                if (data[0] == "1") {
                    document.getElementById('linha_' + id).remove();
                    notify(data[1]);
                } else {
                 notifyError('Ocorreu um erro ao apagar a linha do dossier! ' + data[1]);            
                }
            },
            error: function (data) {
                 notifyError('Ocorreu um erro ao apagar a linha do dossier! ' + data[1]);           
            },
            failure: function (data) {
                 notifyError('Ocorreu um erro ao apagar a linha do dossier! ' + data[1]);           
            }
        });
                    Bulma('#ModalConfirmApagarLinha').modal().close();
    }

        function PreencherRef(id) {
            document.getElementById('btnSearchRef').classList.add("is-loading");
         $.ajax({
            url: '/Produtos/ObterPeca/',
            data: { "ref_produto": id},
            type: "POST",
            success: function (data) {
                if (data.ref_Produto != null) {
                    //console.log(data);
                    document.getElementById('txtDesignacao').value = data.designacao_Produto;
                    document.getElementById('btnSearchRef').disabled = true;
                    document.getElementById('btnSearchRef').classList.remove("is-loading");
                    document.getElementById('txtRef').disabled = true;
                    document.getElementById('divSerie').hidden = !data.serie

                    document.getElementById('txtQtd').focus();
                } else {
                 notifyError('Não foi encontrado nenhum produto com essa referência!');       
                }
            },
            error: function (data) {
                 notifyError('Ocorreu um erro ao obter informação do produto!');      

            },
            failure: function (data) {
                 notifyError('Ocorreu um erro ao obter informação do produto!');      
            }
        });
    }

      function AdicionarLinha(id, qtd) {
            document.getElementById('btnAdicionarLinha').classList.add("is-loading");
         $.ajax({
            url: '/Inventario/ValidarQuantidade/',
             data: { "stamp": '@Model.Picking_Stamp', "ref_produto": id, "qtd": qtd },
            type: "POST",
            success: function (data) {
                if (data[0] == "1") {
                    //console.log(data);
                    document.getElementById('txtHiddenStampLinha').value = data[3];
                    document.getElementById('btnAdicionarLinha').disabled = true;
                    document.getElementById('btnAdicionarLinha').classList.remove("is-loading");
                    document.getElementById('txtQtd').disabled = true;

                    if (!document.getElementById('divSerie').hidden) document.getElementById('txtNumeroSerie').focus();

                    notify(data[1]);
                } else {
                notifyError('Ocorreu um erro ao criar a linha! ' + data[1]); 
                    document.getElementById('btnAdicionarLinha').classList.remove("is-loading");
                }
            },
            error: function (data) {
                notifyError('Ocorreu um erro ao criar a linha! ' + data[1]); 
                    document.getElementById('btnAdicionarLinha').classList.remove("is-loading");
            },
            failure: function (data) {
              notifyError('Ocorreu um erro ao criar a linha! ' + data[1]);    
                    document.getElementById('btnAdicionarLinha').classList.remove("is-loading");
            }
        });
    }

     function AdicionarNumeroSerie(id, serie) {
            document.getElementById('btnAdicionarNumeroSerie').classList.add("is-loading");
         $.ajax({
            url: '/Inventario/ValidarSerie/',
             data: { "stamp": '@Model.Picking_Stamp', "stamp_linha": id, "serie": serie },
            type: "POST",
            success: function (data) {
                if (data[0] == "1") {
                    //console.log(data);
                    document.getElementById('txtNumeroSerie').value = ''
                    document.getElementById('btnAdicionarNumeroSerie').classList.remove("is-loading");
                    notify(data[1]);
                } else {
                notifyError('Ocorreu um erro ao adicionar o numero de serie! ' + data[1]); 
                    document.getElementById('btnAdicionarNumeroSerie').classList.remove("is-loading");
                }
            },
            error: function (data) {
                notifyError('Ocorreu um erro ao adicionar o numero de serie! ' + data[1]); 
                    document.getElementById('btnAdicionarNumeroSerie').classList.remove("is-loading");
            },
            failure: function (data) {
                notifyError('Ocorreu um erro ao adicionar o numero de serie! ' + data[1]); 
                    document.getElementById('btnAdicionarNumeroSerie').classList.remove("is-loading");
            }
        });
    }

    function notifyError(mensagem) {
        bulmaToast.toast({
            message: mensagem,
            type: 'is-danger',
            closeOnClick: true,
            pauseOnHover: true,
            opacity: 0.8,
            duration: 5000,
            position: 'top-center'
        });   
    }
    function notify(mensagem) {
        bulmaToast.toast({
            message: mensagem,
            type: 'is-success',
            closeOnClick: true,
            pauseOnHover: true,
            opacity: 0.8,
            duration: 5000,
            position: 'top-center'
        });
    }

        (document.querySelectorAll('#ModalAdicionarLinha') || []).forEach(($close) => {
    const $target = $close.closest('#ModalAdicionarLinha');

    $close.addEventListener('click', () => {
    if (!($target.classList.contains('is-active'))) window.location.reload();
    });
  });
</script>