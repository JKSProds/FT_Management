@model IEnumerable<FT_Management.Models.Armazem>

@{
    ViewData["Title"] = "Inventário";
}

<form asp-action="Index" method="get">
    <div class="container">
        <div class="columns">
            <div class="column">
                <div class="tile">
                    <div class="tile is-parent is-vertical">
                        <article class="tile is-child notification is-info">
                            <p class="title">
                                <span class="icon mr-3">
                                   <i class="fa-solid fa-dolly"></i>
                                </span>
                                <span>Inventário</span>
                            </p>
                        </article>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<hr />
@if(Model.Count() == 0)
{
    <button class="button is-danger is-rounded is-outlined is-large is-fullwidth" disabled>Não foram encontrados armazéns!</button>
}
else
{
    <div class="column mx-1">
        <div class="card has-table has-mobile-sort-spaced">
            <header class="card-header has-background-info">
                <p class="card-header-title" style="color:#ffffff">
                    <span class="icon mr-3"> <i class="fa-solid fa-warehouse"></i></span>
                    Armazéns
                </p>
            <a class="card-header-icon button is-success m-1 is-disabled">@Model.Count()</a>
            </header>
            <div class="card-content">
                <div class="b-table">
                    <div class="table-wrapper has-mobile-cards">
                            <table class="table is-fullwidth">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ArmazemId)</th>
                                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ArmazemNome)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().ArmazemId)">@item.ArmazemId</td>
                                            <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault().ArmazemNome)">@item.ArmazemNome</td>
                                             <td class="is-actions-cell">
                                                <a class="button is-large is-success is-rounded is-pulled-right" style="width:100%" onclick="VerDossiersInventario('@item.ArmazemId')"><span class="icon is-small"><i class="fa-solid fa-eye"></i></span></a> 
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                            </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<div class="modal" id="modalDossiersInventario">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title" id="txtHeaderModal">###</p>
    </header>
    <section class="modal-card-body">
        <div class="modal-body">
            <div id="divDossiers"></div>
        </div>
  </section>
    <footer class="modal-card-foot">
      <button class="button" onclick="Bulma('#modalDossiersInventario').modal().close();">Fechar</button>
    </footer>
  </div>
</div>

<script>
    function VerDossiersInventario(id) {

        $.ajax({
            url: '/Inventario/ObterDossiers/',
            data: { "id": id},
            type: "POST",
            success: function (data) {
                document.getElementById("txtHeaderModal").innerHTML = "Dossiers - Armazém " + id;
                if (!data || data.length === 0) {
                   var html = "<button class='button is-danger is-rounded is-outlined is-fullwidth' disabled>Não foram encontrados dossiers associados a este armazém!</button>"; 
                   document.getElementById("divDossiers").innerHTML = html;
                } else {
                   var html = "<table style='width:100%;border-width:3px;' border='1'><tr><th>Nº do Dossier</th><th>Criado a:</th><th>Criado por:</th><th></th></tr>";
                   data.forEach(obj => {
                        console.log(obj);
                        html += "<tr><td style='padding: 5px;'>" + obj.idPicking + "</td><td style='padding: 5px;'>" + new Date(obj.dataDossier).toLocaleDateString() + "</td><td style='padding: 5px;'>" + obj.editadoPor + "</td><td style='padding: 5px;'><a class='button is-large is-success is-rounded is-pulled-right' style='width:100%' href='/Inventario/Dossier/"+obj.picking_Stamp+"'><span class='icon is-small'><i class='fa-solid fa-eye'></i></span></a> </td></tr>";
                    });
                   html += "</table>";
                   document.getElementById("divDossiers").innerHTML = html;
                }

               Bulma('#modalDossiersInventario').modal().open();
            },
            error: function (response) {
                bulmaToast.toast({
                        message: 'Ocorreu um erro ao obter os dossiers associados a este armazém!',
                        type: 'is-danger',
                        closeOnClick: true,
                        pauseOnHover: true,
                        opacity: 0.8,
                        duration: 5000,
                        position: 'top-center'
                    });  
            },
            failure: function (response) {
                bulmaToast.toast({
                        message: 'Ocorreu um erro ao obter os dossiers associados a este armazém!',
                        type: 'is-danger',
                        closeOnClick: true,
                        pauseOnHover: true,
                        opacity: 0.8,
                        duration: 5000,
                        position: 'top-center'
                    });       
            }
        });
    }
 function copiarTexto(id) {
                  
            bulmaToast.toast({
                message: 'Texto copiado com sucesso!',
                type: 'is-success',
                closeOnClick: true,
                pauseOnHover: true,
                opacity: 0.8,
                duration: 5000,
                position: 'top-center'
            })

            // text area method
        let textArea = document.createElement("textarea");
        textArea.value = document.getElementById(id).value;
        // make the textarea out of viewport
        textArea.style.position = "fixed";
        textArea.style.left = "-999999px";
        textArea.style.top = "-999999px";
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        return new Promise((res, rej) => {
            // here the magic happens
            document.execCommand('copy') ? res() : rej();
            textArea.remove();
        });

        }

</script>